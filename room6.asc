// Flur im Erdgeschoß
import function aufz();


/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
  Door[eDoorNumFrontDoor].Init(oHaustuer, hHaustuer);
  Door[eDoorNumBath].Init(oTuerBad, hTuerBad);
  Door[eDoorNumTelephoneRoom].Init(oTuerTelefonzimmer, hTuerTelefonzimmer);

  // The elevator is always closed, when the player enters the room.
	oAufzugtuer.SetView(75, 0, 0);
	hKnoepfe.Enabled = false;
  RemoveWalkableArea(1);
}

function room_AfterFadeIn()
{
	// Bei Bedarf noch Nummer der weiteren Räume hinzufügen
	if (player.PreviousRoom == 2)
	{
		oAufzugtuer.Animate(0, 10, eOnce, eBlock, eForwards);
		RestoreWalkableArea(1);
		hKnoepfe.Enabled = true;
  }
}

/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hHaustuer_AnyClick()
{
  if (Door[eDoorNumFrontDoor].Click() == 0) Unhandled();
}

function hTuerBad_AnyClick()
{
  if (Door[eDoorNumBath].Click() == 0) Unhandled();
}

function hTuerTelefonzimmer_AnyClick()
{
  if (Door[eDoorNumTelephoneRoom].Click() == 0) Unhandled();
}

/****************************
*   Objekt-Funktionen
****************************/
function oAufzugtuer_AnyClick()
{
	if (any_click_move(158, 102, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist der Aufzug.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dazu sitzt die Tür zu fest im Rahmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Tür ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			aufz();
			hRufknopf.RunInteraction(eModeInteract); // The player automatically uses the button if he tries to open the elevator.
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hRufknopf_AnyClick()
{
	if (any_click_move(158, 102, eDirLeft))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist der Rufknopf für den Aufzug.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich könnte die Kontrolltafel abnehmen. Aber dazu fehlt mir das Werkzeug.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
			if (oAufzugtuer.Visible) // true = elavator is open, false = elevator is closed.
			{
				oAufzugtuer.Animate(0, 5, eOnce, eBlock, eForwards);
        oAufzugtuer.Visible = false;
				RestoreWalkableArea(1);
				hKnoepfe.Enabled = true;
			} else player.Say("Der Aufzug ist bereits hier.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ja klar.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Wie wär's mit drücken.");
		}
		else Unhandled();
	}
}

function hKnoepfe_AnyClick()
{
	if (any_click_move(150, 95, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die steuern den Aufzug.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich könnte die Kontrolltafel abnehmen. Aber dazu fehlt mir das Werkzeug.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
			dAufzug.Start();
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Kontrolltafel ist bereits drauf.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Knöpfe drückt man.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
