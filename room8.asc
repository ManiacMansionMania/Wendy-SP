// Schreibstube (Wendy)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
  Door[eDoorNumOffice].Init(oTuer, hTuer);
	oPapier.Clickable = false;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
  if (Door[eDoorNumOffice].Click() == 0) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oPapier_AnyClick()
{
	if (any_click_move(244, 113, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist der Lieblingsteddy von Marcy.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Vielleicht sollte ich ihn einfach nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Vielleicht sollte ich ihn einfach nehmen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Und da ich momentan keine davon brauche, lass ich es.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Teddy ist sauber vernäht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Vielleicht sollte ich ihn einfach nehmen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Damit er umfällt?");
		}
		else Unhandled();
	}
}

function oPapierstapel_AnyClick()
{
	if (any_click_move(244, 113, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Stapel mit Papier.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player.InventoryQuantity[iPapier.ID] > 0 )
			{
				player.Say("Ich hab doch schon eins.");
			}
			else if ( true == oPapier.Visible )
			{
				player.Say("Es ist doch schon eins in die Schreibmaschine eingespannt.");
			}
			else
			{
				PlaySound(4);
				player.AddInventory(iPapier);
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die sind leer.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich könnte eventuel ein Blatt NEHMEN.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich könnte eventuel ein Blatt NEHMEN.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich könnte eventuel ein Blatt NEHMEN.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich könnte eventuel ein Blatt NEHMEN.");
		}
		else Unhandled();
	}
}

function oStuhl_AnyClick()
{
	if (any_click_move(243, 122, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein ganz normaler Stuhl.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Und was soll ich dann damit?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein, ich habe zu tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("UDer Stuhl besitzt keinerleit Geheimfach, dass ich im moment öffen müsste.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der lässt sich nicht schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Solange ich mich nicht draufsetze, muss ich ihn nicht bewegen.");
		}
		else Unhandled();
	}
}

function oSchreibmaschine_AnyClick()
{
	if (any_click_move(260, 123, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Wir beide haben schon viel durchgemacht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( false == oPapier.Visible )
			{
				player.Say("Für sie habe ich extra dieses Zimmer neu eingerichtet.");
			}
			else
			{
				player.Say("OK, ich nehme das Blatt Papier wieder heraus.");
				oPapier.Visible = false;
				PlaySound(37);
				player.AddInventory(iPapier);
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( false == oPapier.Visible )
			{
				player.Say("Da ist kein Papier in der Maschine.");
			}
			else
			{
				player.Say("Ich habe keine Idee, was ich schreiben soll.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Und da ich momentan keine davon brauche, lass ich es.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Teddy ist sauber vernäht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Vielleicht sollte ich ihn einfach nehmen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Damit er umfällt?");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( true == oPapier.Visible )
			{
				player.Say("OK, ich spanne das Blatt in die Schreibmaschine ein.");
				oPapier.Visible = true;
				PlaySound(37);
				player.LoseInventory(iPapier);
			}
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hFenster_AnyClick()
{
	if (any_click_move(300, 133, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Viele Geschichten, die ich schreibe handeln vom Meer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Soll ich es aus der Wand rausreißen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich lass es doch lieber zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Besser nicht, von da kommt immer ein starker Wind.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Es ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Das Holzfenster gibt nicht nach.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Holzfenster gibt nicht nach.");
		}
		else Unhandled();
	}
}

function hSchrank_AnyClick()
{
	if (any_click_move(179, 126, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("In der einen Hälte sind Farbbänder, Bleistifte und Papier.");
			player.Say("In der anderen angefangene und fertige Manuskripte.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir etwas zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Klopf, klopf.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Bloß nicht, sonst werd ich noch unter einer Welle Farbbändern, Bleistiften und Papier begraben.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Da bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Da bewegt sich nichts.");
		}
		else Unhandled();
	}
}

function hBuecherregal_AnyClick()
{
	if (any_click_move(86, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Wenn mir die Ideen ausgehen, kann ich mich hier immer wieder neu inspirieren lassen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Sonst gehts dir gut, wie?.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich hab zu tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Und da ich momentan keine davon brauche, lass ich es.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Bücher sind schon alle zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich will jetzt kein Buch lesen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nichts ist passiert.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
