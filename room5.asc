// Küche (Wendy)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oTuer.init_object(15);
	oWasser.Clickable = false;
	oWasser.SetView(111);
	oWasser.Animate(0, 0, eRepeat, eNoBlock);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( any_click_on_door (15, oTuer, 287, 130, eDirRight, 3, 32, 121 , eDirRight) == 0 ) Unhandled ();
}


/****************************
*   Objekt-Funktionen
****************************/
function oWasser_AnyClick()
{
	if (any_click_move(250, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Klares kühles Wasser.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
      oWasser.Visible = false;
      PlaySound(4);
      //AddInventory(4);
      SetGlobalInt(37, 0);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Schmeckt lecker.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);

			player.Say("Und wie genau stellst du dir das vor?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Und wie genau stellst du dir das vor?");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Dann werden meine Hände naß.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Dann werden meine Hände naß.");
		}
		else Unhandled();
	}
}

function oSchrank_AnyClick()
{
	if (any_click_move(68, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein leerer Schrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Leider nein. Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und was soll ich reinstellen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);

			player.Say("Nochmal öffnen?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(83);
			oSchrank.Visible = false;
			hSchrank.Enabled = true;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Leider nein. Das geht nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Leider nein. Das geht nicht.");
		}
		else Unhandled();
	}
}

function oKuehlschrank_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein offener Kühlschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe nichts zum reinstellen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
      oKuehlschrank.Visible = false;
			hKuehlschrank.Enabled = true;
      PlaySound(83);
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Damit er umfällt?");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Damit er umfällt?");
		}
		else Unhandled();
	}
}

function oGefrierfach_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein offenes Gefrierfach.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe nichts zum reinstellen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das ist schon auf.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
      oGefrierfach.Visible = false;
			hGefrierfach.Enabled = true;
      PlaySound(83);
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Damit es umfällt?");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Damit es umfällt?");
		}
		else Unhandled();
	}
}

function oMikrowelle_AnyClick()
{
	if (any_click_move(207, 127, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Mikrowelle. Ronvile Standardmodell. A413");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Und wo soll ich sie dann hinstellen?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Gib mir was und ich leg's rein.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);

			player.Say("Sie ist schon offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
      oMikrowelle.Visible = false;
      PlaySound(83);
      hMikrowelle.Enabled = true;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die steht da richtig.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die muss nicht versetzt werden.");
		}
		else Unhandled();
	}
}

function oSchublade_AnyClick()
{
	if (any_click_move(196, 129, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine offene Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mit Teleskopschienen festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich kann was reinlegen, wenn du das meinst.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Noch weiter kann ich sie nicht rausziehen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(83);
			oSchublade.Visible = false;
			hSchublade.Enabled = true;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Noch weiter kann ich sie nicht rausziehen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(83);
			oSchublade.Visible = false;
			hSchublade.Enabled = true;
		}
		else Unhandled();
	}
}

function oHaengeschrank_AnyClick()
{
	if (any_click_move(117, 128, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein leerer Hängeschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ganze Zeile ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Soll ich was reinlegen? Dann sag's mir.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);

			player.Say("Nochmal?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(83);
			oHaengeschrank.Visible = false;
			//EnableHotspot(5);
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Nochmal öffnen?");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(83);
			oHaengeschrank.Visible = false;
			//EnableHotspot(5);
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hSchrank_AnyClick()
{
	if (any_click_move(68, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Schrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nöö.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(85);
			oSchrank.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oSchrank.Visible = true;
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hMikrowelle_AnyClick()
{
	if (any_click_move(203, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Mikrowelle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nöö.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(85);
			oMikrowelle.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oMikrowelle.Visible = true;
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hKuehlschrank_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Kühlschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nöö.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(85);
			oKuehlschrank.Visible = true;
			hKuehlschrank.Enabled = false;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oKuehlschrank.Visible = true;
			hKuehlschrank.Enabled = false;
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hGefrierfach_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Gefrierfach.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nöö.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(85);
			oGefrierfach.Visible = true;
			hGefrierfach.Enabled = false;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oGefrierfach.Visible = true;
			hGefrierfach.Enabled = false;
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hHaengeschrank_AnyClick()
{
	if (any_click_move(117, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nöö.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(85);
			oHaengeschrank.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oHaengeschrank.Visible = true;
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hHerd_AnyClick()
{
	if (any_click_move(150, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Herd.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nöö.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hGeschirrspueler_AnyClick()
{
	if (any_click_move(100, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Geschirrspüler. Immer wenn ich keine Lust zum Spülen habe, benutze ich ihn.");
			Wait(5);
			player.FaceDirection(eDirDown);
			Wait(5);
			player.Say("Und das ist ziemlich oft.");
			Wait(5);
			player.FaceDirection(eDirUp);
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nöö.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(52, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann die Straße vor unserem Haus sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Wie stellst du dir das vor?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Dass lass ich zu, sonst zieht es.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dass lass ich zu, sonst zieht es.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Dass lass ich zu, sonst zieht es.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hSchublade_AnyClick()
{
	if (any_click_move(196, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nöö.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(85);
			oSchublade.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oSchublade.Visible = true;
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else Unhandled();
	}
}

function hWaschbecken_AnyClick()
{
	if (any_click_move(52, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Waschbecken.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Wie stellst du dir das vor?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe nichts zum abspülen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("???");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("???");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Dass lass ich schön bleiben.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das ist da genau richtig, wo es ist.");
		}
		else Unhandled();
	}
}

function hWasserhahn_AnyClick()
{
	if (any_click_move(52, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Wasserhahnen");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( GetGlobalInt(13) == 0 )
			{
				oWasser.Visible = true;
				PlayAmbientSound (1, 95, 150, 51, 131);
				SetGlobalInt(13,1);
			}
			else if ( GetGlobalInt(13) == 1 )
			{
				oWasser.Visible = false;
				StopAmbientSound(1);
				SetGlobalInt(13,0);
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( GetGlobalInt(13) == 0 )
			{
				oWasser.Visible = true;
				PlayAmbientSound (1, 95, 150, 51, 131);
				SetGlobalInt(13,1);
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( GetGlobalInt(13) == 1 )
			{
				oWasser.Visible = false;
				StopAmbientSound(1);
				SetGlobalInt(13,0);
			}
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			if ( GetGlobalInt(13) == 0 )
			{
				oWasser.Visible = true;
				PlayAmbientSound (1, 95, 150, 51, 131);
				SetGlobalInt(13,1);
			}
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			if ( GetGlobalInt(13) == 1 )
			{
				oWasser.Visible = false;
				StopAmbientSound(1);
				SetGlobalInt(13,0);
			}
		}
		else Unhandled();
	}
}

function hRezepttafel_AnyClick()
{
	if (any_click_move(175, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die 7 besten italienischen Gerichte.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Es ist an der Wand befestigt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Für eine Portion Spagetti benötigt man ...");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("???");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("???");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Keine Reaktion.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es knarrt.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/

